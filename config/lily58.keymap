/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };

    combos { compatible = "zmk,combos"; };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp CLCK          &kp N1        &kp N2       &kp N3       &kp N4         &kp N5                           &kp N6         &kp N7         &kp N8       &kp N9       &kp N0                &kp DELETE
&kp TAB           &kp Q         &kp W        &kp E        &kp R          &kp T                            &kp Y          &kp U          &kp I        &kp O        &kp P                 &kp PIPE
&kp LEFT_SHIFT    &bhm LCTRL A  &bhm LGUI S  &bhm LALT D  &bhm LSHIFT F  &kp G                            &kp H          &bhm RSHIFT J  &bhm RALT K  &bhm RGUI L  &bhm RCTRL SEMICOLON  &kp RIGHT_SHIFT
&kp LEFT_CONTROL  &kp Z         &kp X        &kp C        &kp V          &kp B   &kp ESCAPE    &kp MINUS  &kp N          &kp M          &kp COMMA    &kp DOT      &kp APOSTROPHE        &kp RIGHT_CONTROL
                                             &mo 3        &mo 2          &mo 1   &kp SPACE     &kp RET    &kp BACKSPACE  &mo 2          &none
            >;
        };

        navigation_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&none  &none  &none  &none  &none  &none                  &kp F6        &kp F7       &kp F8         &kp F9       &kp F10     &kp F11
&none  &none  &none  &none  &none  &none                  &kp K_REDO    &kp K_PASTE  &kp K_COPY     &kp K_CUT    &kp K_UNDO  &kp F12
&none  &none  &none  &none  &none  &none                  &kp CAPSLOCK  &kp LEFT     &kp DOWN       &kp UP       &kp RIGHT   &none
&none  &none  &none  &none  &none  &none  &none    &none  &kp INSERT    &kp HOME     &kp PAGE_DOWN  &kp PAGE_UP  &kp END     &none
                     &none  &none  &none  &none    &none  &none         &none        &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbol_layer {
            bindings = <
&none  &kp F1       &kp F2                &kp F3                 &kp F4            &kp F5                            &kp F6     &kp F7         &kp F8         &kp F9        &kp F10     &kp F11
&none  &kp PERCENT  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp LESS_THAN     &kp PLUS                          &none      &kp HASH       &kp PIPE       &kp QUESTION  &kp DOLLAR  &kp F12
&none  &kp GRAVE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp GREATER_THAN  &kp MINUS                         &kp CARET  &kp ASTERISK   &kp KP_SLASH   &kp EXCL      &kp AT      &none
&none  &kp TILDE    &kp LEFT_BRACE        &kp RIGHT_BRACE        &none             &none      &none    &kp KP_EQUAL  &none      &kp AMPERSAND  &kp BACKSLASH  &none         &none       &none
                                          &none                  &none             &none      &none    &none         &none      &none          &none
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                       &kp F6        &kp F7           &kp F8           &kp F9           &kp F10       &kp F11
&trans  &trans  &trans  &trans  &trans  &trans                       &kp ASTERISK  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp MINUS     &kp F12
&trans  &trans  &trans  &trans  &trans  &trans                       &kp SLASH     &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp PLUS      &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &kp EQUAL  &trans        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_ENTER  &trans
                        &trans  &trans  &trans  &trans    &trans     &trans        &kp KP_NUMBER_0  &kp DOT
            >;
        };
    };
};
